plugins {
    id 'net.minecraftforge.gradleutils'
    id 'java-library'
    id 'maven-publish'
}

group = 'net.minecraftforge'
version = gradleutils.getTagOffsetVersion()
println('Version: ' + version)

sourceSets {
    filesystems {
        java {
            srcDir file('src/filesystems/java')
        }
    }
    test {
        java {
            srcDir file('src/binks/java')
        }
        resources.srcDir file('src/binks/resources')
    }
}

repositories {
    mavenCentral()
    maven {
        name 'Forge'
        url 'https://maven.minecraftforge.net/'
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
}

project.tasks.withType(JavaCompile).all {
    JavaToolchainService service = getProject().getExtensions().getByType(JavaToolchainService.class);
    Provider<JavaCompiler> compiler = service.compilerFor(s -> s.getLanguageVersion().set(JavaLanguageVersion.of(8)));

    it.javaCompiler = compiler;
}

dependencies {
    api group: 'org.apache.maven', name: 'maven-artifact', version: "${apacheMavenVersion}"
    api group: 'com.google.code.gson', name: 'gson', version: "${gsonVersion}"
    api group: 'com.google.guava', name: 'guava', version:"${guavaVersion}"


    api group: 'com.machinezoo.noexception', name:'noexception', version:"${noExceptionsVersion}"
    api group: 'org.slf4j', name:'slf4j-api', version:"${slf4jVersion}"
    runtimeOnly group:'org.slf4j', name: 'slf4j-simple', version:"${slf4jVersion}"

    testImplementation sourceSets.filesystems.output
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitVersion}"
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitVersion}"
}

test {
    useJUnitPlatform()
}

processTestResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
    manifest {
        attributes([
                'Maven-Artifact'          : "${project.group}:${project.archivesBaseName}:${project.version}",
                "Specification-Title"     : project.name,
                "Specification-Vendor"    : "Minecraft Forge",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : "Minecraft Forge",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Automatic-Module-Name"   : "JarJar",
        ])
    }
}

tasks.register('fileSystemsJar', Jar) {
    archivesBaseName = 'filesystems'

    from sourceSets.filesystems.output

    manifest {
        attributes([
                'Maven-Artifact'          : "${project.group}:${project.archivesBaseName}:${project.version}-filesystems",
                "Specification-Title"     : project.name + "-FileSystems",
                "Specification-Vendor"    : "Minecraft Forge",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name + "-FileSystems",
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : "Minecraft Forge",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Automatic-Module-Name"   : "JarJar-FileSystems",
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact tasks.fileSystemsJar {
                classifier = 'filesystems'
            }

            pom {
                name = project.name
                description = 'Jar in Jar Utilities including the required NIO FileSystems.'
                url = 'https://github.com/MinecraftForge/JarJar'

                scm {
                    url = 'https://github.com/MinecraftForge/JarJar'
                    connection = 'scm:git:git://github.com/MinecraftForge/JarJar.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/JarJar.git'
                }

                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/JarJar/issues'
                }

                licenses {
                    license {
                        name = 'LGPL 2.1'
                        url = 'https://github.com/MinecraftForge/JarJar/blob/main/LICENSE'
                        distribution = 'repo'
                    }
                }
            }
        }
    }
    repositories {
        maven gradleutils.getPublishingForgeMaven()
    }
}

changelog {
    fromTag '0.3'
}